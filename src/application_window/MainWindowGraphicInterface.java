/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package application_window;

import application_library.*;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Lenka
 */
public class MainWindowGraphicInterface extends javax.swing.JFrame {

    /**
     * Creates new form MainWindowInterface
     */
    public MainWindowGraphicInterface() {
        initComponents();
        
        library          = new Library();
        studentStatistic = new Statistic();        
        deliveryQuestion = new ArrayList<>();
        userSettings     = new UserSettings();
        
        jPanel1.setLayout(new GridLayout());
        jPanel1.setVisible(false);
        
        this.setSize(Toolkit.getDefaultToolkit().getScreenSize()); 
        
        testingPanel1.setStatisticTableAndPane(jTable1, jTextPane_DetailStatistic, jFrame_Statistic);
    }
    
    public char[] getTeacherPassword(){
        return TEACHER_PASSW.toCharArray();
    }
    
    public void setPassword(char[] password){
        TEACHER_PASSW = new String(password);
        
        userSettings.setPassword(password);
        
        UserSettings.saveSettings(userSettings);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog_StartTest = new javax.swing.JDialog();
        jFrame_Statistic = new javax.swing.JFrame();
        jPanel_Statistic = new javax.swing.JPanel();
        jScrollPane_Statistic = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane_DetailStatistic = new javax.swing.JScrollPane();
        jTextPane_DetailStatistic = new javax.swing.JTextPane();
        jFrame_Editor = new application_window.EditorWindowGraphicInterface();
        jFrame_Help = new application_window.HelpWindowGraphicInterface();
        jFrame_Settings = new application_window.SettingWindowGraphicInterface();
        jPanel1 = new javax.swing.JPanel();
        testingPanel1 = new application_window.TestingPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu_Menu = new javax.swing.JMenu();
        jMenuItem_OpenTest = new javax.swing.JMenuItem();
        jMenuItem_NewTest = new javax.swing.JMenuItem();
        jMenuItem_Finish = new javax.swing.JMenuItem();
        jSeparator_Menu = new javax.swing.JPopupMenu.Separator();
        jMenuItem_Exit = new javax.swing.JMenuItem();
        jMenu_Teacher = new javax.swing.JMenu();
        jMenuItem_AddNewTests = new javax.swing.JMenuItem();
        jMenuItem_EditTests = new javax.swing.JMenuItem();
        jMenu_Settings = new javax.swing.JMenu();
        jMenu_Help = new javax.swing.JMenu();
        jMenuItem_About = new javax.swing.JMenuItem();

        jDialog_StartTest.setTitle("Початок тестування");
        jDialog_StartTest.setAlwaysOnTop(true);
        jDialog_StartTest.setBackground(java.awt.SystemColor.menu);

        javax.swing.GroupLayout jDialog_StartTestLayout = new javax.swing.GroupLayout(jDialog_StartTest.getContentPane());
        jDialog_StartTest.getContentPane().setLayout(jDialog_StartTestLayout);
        jDialog_StartTestLayout.setHorizontalGroup(
            jDialog_StartTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog_StartTestLayout.setVerticalGroup(
            jDialog_StartTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jFrame_Statistic.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jFrame_Statistic.setAlwaysOnTop(true);
        jFrame_Statistic.setMinimumSize(new java.awt.Dimension(1000, 550));
        jFrame_Statistic.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                jFrame_StatisticWindowClosing(evt);
            }
        });

        jScrollPane_Statistic.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Статистика студента", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N

        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "№", "Відповідь", "Витрачений час", "Бали"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setFillsViewportHeight(true);
        jTable1.setRowHeight(18);
        jTable1.setRowMargin(2);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane_Statistic.setViewportView(jTable1);

        jScrollPane_DetailStatistic.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Детальна інформація", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N

        jTextPane_DetailStatistic.setEditable(false);
        jTextPane_DetailStatistic.setBorder(null);
        jTextPane_DetailStatistic.setContentType("text/html"); // NOI18N
        jTextPane_DetailStatistic.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTextPane_DetailStatistic.setMinimumSize(new java.awt.Dimension(534, 528));
        jTextPane_DetailStatistic.setPreferredSize(new java.awt.Dimension(534, 528));
        jScrollPane_DetailStatistic.setViewportView(jTextPane_DetailStatistic);

        javax.swing.GroupLayout jPanel_StatisticLayout = new javax.swing.GroupLayout(jPanel_Statistic);
        jPanel_Statistic.setLayout(jPanel_StatisticLayout);
        jPanel_StatisticLayout.setHorizontalGroup(
            jPanel_StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_StatisticLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane_Statistic, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane_DetailStatistic)
                .addContainerGap())
        );
        jPanel_StatisticLayout.setVerticalGroup(
            jPanel_StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_StatisticLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane_DetailStatistic, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane_Statistic, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jFrame_StatisticLayout = new javax.swing.GroupLayout(jFrame_Statistic.getContentPane());
        jFrame_Statistic.getContentPane().setLayout(jFrame_StatisticLayout);
        jFrame_StatisticLayout.setHorizontalGroup(
            jFrame_StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Statistic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame_StatisticLayout.setVerticalGroup(
            jFrame_StatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Statistic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame_HelpLayout = new javax.swing.GroupLayout(jFrame_Help.getContentPane());
        jFrame_Help.getContentPane().setLayout(jFrame_HelpLayout);
        jFrame_HelpLayout.setHorizontalGroup(
            jFrame_HelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );
        jFrame_HelpLayout.setVerticalGroup(
            jFrame_HelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame_SettingsLayout = new javax.swing.GroupLayout(jFrame_Settings.getContentPane());
        jFrame_Settings.getContentPane().setLayout(jFrame_SettingsLayout);
        jFrame_SettingsLayout.setHorizontalGroup(
            jFrame_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );
        jFrame_SettingsLayout.setVerticalGroup(
            jFrame_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Тести");
        setForeground(new java.awt.Color(204, 204, 204));
        setMaximumSize(new java.awt.Dimension(1000, 700));
        setMinimumSize(new java.awt.Dimension(804, 511));
        setType(java.awt.Window.Type.POPUP);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setAutoscrolls(true);
        jPanel1.setMinimumSize(new java.awt.Dimension(804, 480));
        jPanel1.setPreferredSize(new java.awt.Dimension(804, 480));

        testingPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        testingPanel1.setMaximumSize(new java.awt.Dimension(1000, 700));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testingPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testingPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenuBar1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jMenu_Menu.setText("Меню");

        jMenuItem_OpenTest.setText("Відкрити...");
        jMenuItem_OpenTest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem_OpenTestMousePressed(evt);
            }
        });
        jMenu_Menu.add(jMenuItem_OpenTest);

        jMenuItem_NewTest.setText("Почати заново");
        jMenuItem_NewTest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem_NewTestMousePressed(evt);
            }
        });
        jMenu_Menu.add(jMenuItem_NewTest);

        jMenuItem_Finish.setText("Завершити тестування");
        jMenuItem_Finish.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem_FinishMousePressed(evt);
            }
        });
        jMenu_Menu.add(jMenuItem_Finish);
        jMenu_Menu.add(jSeparator_Menu);

        jMenuItem_Exit.setText("Вихід");
        jMenuItem_Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem_ExitMousePressed(evt);
            }
        });
        jMenu_Menu.add(jMenuItem_Exit);

        jMenuBar1.add(jMenu_Menu);

        jMenu_Teacher.setText("Вчителю");

        jMenuItem_AddNewTests.setText("Додати нові тести");
        jMenuItem_AddNewTests.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem_AddNewTestsMousePressed(evt);
            }
        });
        jMenu_Teacher.add(jMenuItem_AddNewTests);

        jMenuItem_EditTests.setText("Редагувати...");
        jMenuItem_EditTests.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem_EditTestsMousePressed(evt);
            }
        });
        jMenu_Teacher.add(jMenuItem_EditTests);

        jMenuBar1.add(jMenu_Teacher);

        jMenu_Settings.setText("Налаштування");
        jMenu_Settings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu_SettingsMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu_Settings);

        jMenu_Help.setText("Help");

        jMenuItem_About.setText("Про програму");
        jMenuItem_About.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem_AboutMousePressed(evt);
            }
        });
        jMenu_Help.add(jMenuItem_About);

        jMenuBar1.add(jMenu_Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_AddNewTestsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem_AddNewTestsMousePressed
        if(loginTeacherDialog()){
            String path = "";

            JFileChooser saveNewFile = new JFileChooser("C:/");
            FileFilter   filter      = new FileNameExtensionFilter("TEST_LIB files", "tlib");

            saveNewFile.addChoosableFileFilter(filter);

            int retrival = saveNewFile.showSaveDialog(this);

            if(retrival == JFileChooser.APPROVE_OPTION){
                try {
                    path = saveNewFile.getSelectedFile().getCanonicalPath();

                    if(!path.endsWith(".tlib")){
                        path += ".tlib";
                    }
                } 
                catch (IOException ex) {
                    Logger.getLogger(MainWindowGraphicInterface.class.getName()).log(Level.SEVERE, null, ex);

                    path += "library" + Long.toString(System.currentTimeMillis()%99) + ".tlib";
                }

                Library.save_library(library, path);

                library.setPath(path);

                String testName = JOptionPane.showInputDialog("Введіть назву тесту:");
                library.set_test_name(testName);

                jFrame_Editor = new EditorWindowGraphicInterface(library);
                jFrame_Editor.setVisible(true);
            }
        }
    }//GEN-LAST:event_jMenuItem_AddNewTestsMousePressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       jPanel1.setVisible(false);
       
       jMenuItem_Finish.setEnabled(false);
       jMenuItem_NewTest.setEnabled(false);
       
       loadPassword();
    }//GEN-LAST:event_formWindowOpened

    private void jMenuItem_NewTestMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem_NewTestMousePressed
        testingPanel1.restartTest();
    }//GEN-LAST:event_jMenuItem_NewTestMousePressed

    private void jMenu_SettingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu_SettingsMouseClicked
        jFrame_Settings.setParentFrame(this);
        jFrame_Settings.setVisible(true);
    }//GEN-LAST:event_jMenu_SettingsMouseClicked

    private void jMenuItem_AboutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem_AboutMousePressed
        jFrame_Help.setMode(HelpWindowGraphicInterface.MAIN_WINDOW_MODE);
        jFrame_Help.setVisible(true);
    }//GEN-LAST:event_jMenuItem_AboutMousePressed

    private void jMenuItem_ExitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem_ExitMousePressed
        if(testingPanel1.isTesting){
            testingPanel1.finishByTimeout();
        }
        
        System.exit(0);
    }//GEN-LAST:event_jMenuItem_ExitMousePressed

    private void jMenuItem_EditTestsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem_EditTestsMousePressed
        if(loginTeacherDialog()){
            library = showOpenLibraryFileDialog();

            jFrame_Editor = new EditorWindowGraphicInterface(library);
            jFrame_Editor.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem_EditTestsMousePressed

    private Library showOpenLibraryFileDialog(){
        String path = "";
        Library lib = new Library();
        
        JFileChooser opentForEditFile = new JFileChooser("C:/");
        FileFilter   filter           = new FileNameExtensionFilter("TEST_LIB files", "tlib");
        
        opentForEditFile.addChoosableFileFilter(filter);
        
        int retrival = opentForEditFile.showOpenDialog(this);
        
        if(retrival == JFileChooser.APPROVE_OPTION){
            path = opentForEditFile.getSelectedFile().getPath();
            
            lib = Library.load_library(path);
        }
        return lib;
    }
    
    private Library openLibrary(String path){
        return Library.load_library(path);
    }
    
    private void openStatistic(String path){
        studentStatistic = Statistic.loadStatistic(path);
        
        studentStatistic.drawShortStatistic(jTable1, jTextPane_DetailStatistic);
        jFrame_Statistic.setVisible(true);
    }
    
    private int showOpenFileDialog(FileFilter[] filters){
        String path   = "";
        int    result = 0;
        
        JFileChooser opentForEditFile = new JFileChooser("C:/");
        
        for(FileFilter fFilter : filters){
            opentForEditFile.addChoosableFileFilter(fFilter);
        }        
        
        int retrival = opentForEditFile.showOpenDialog(this);
        
        if(retrival == JFileChooser.APPROVE_OPTION){
            path = opentForEditFile.getSelectedFile().getPath();
            
            if(path.endsWith(".tlib")){
                library = openLibrary(path);
                                
                result = OPEN_LIBRARY;
            }
            else if(path.endsWith(".tstat")){
                openStatistic(path);
                
                result = OPEN_STATISTIC;
            }
            else{
                result = showOpenFileDialog(filters);
            }
        }
        return result;
    }
    
    private void jMenuItem_OpenTestMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem_OpenTestMousePressed
        int openFile = showOpenFileDialog(
                    new FileFilter[]{new FileNameExtensionFilter("TEST_LIB files", "tlib"),
                    new FileNameExtensionFilter("TEST_STAT files", "tstat")});
        
        if(openFile == OPEN_LIBRARY){
            startTestInputDialog();

            testingPanel1.setQuestions(deliveryQuestion);

            jPanel1.setVisible(true);
            jPanel1.setEnabled(true);

            testingPanel1.startTest();
            //testingPanel1.setTimeOut(45);
            testingPanel1.redrawPanel();
        }
        
        jMenuItem_Finish.setEnabled(true);
        jMenuItem_NewTest.setEnabled(true);
    }//GEN-LAST:event_jMenuItem_OpenTestMousePressed

    private void jFrame_StatisticWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jFrame_StatisticWindowClosing
        String libraryPath = library.getPath();
        
        String statisticPath = libraryPath.substring(0, libraryPath.length() - 5) +
                studentStatistic.getStudentInfo() + "Статистика.tstat";
        System.out.println(statisticPath);
        
        Statistic.saveStatistic(studentStatistic, statisticPath);
        
        jMenuItem_Finish.setEnabled(false);
       jMenuItem_NewTest.setEnabled(false);
    }//GEN-LAST:event_jFrame_StatisticWindowClosing

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(testingPanel1.isTesting){
            testingPanel1.finishByTimeout();
        }
               
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem_FinishMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem_FinishMousePressed
        testingPanel1.finishByTimeout();
    }//GEN-LAST:event_jMenuItem_FinishMousePressed

    private void startTestInputDialog(){
        JTextField name = new JTextField();
        JTextField group  = new JTextField();
        final JComboBox<String> filter      = new JComboBox<>();
        final JComboBox<String> filterValue = new JComboBox<>();
        
        setFilteredValueQuestionNumber(filterValue);
        
        filter.addItem("Декілька питань");
        filter.addItem("По темі");
        filter.addItem("По варіанту");
        filter.setEditable(false);
        filter.setSelectedIndex(0);
        
        
        filter.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if(filter.getSelectedIndex() == 0){
                    filterValue.removeAllItems();
                    
                    setFilteredValueQuestionNumber(filterValue);
                }
                else if(filter.getSelectedIndex() == THEME_FILTER){
                    filterValue.removeAllItems();
                    
                    ArrayList<String> themes = library.getThemes();
                    
                    for(String theme : themes){
                        filterValue.addItem(theme);
                    }
                }
                else if(filter.getSelectedIndex() == VARIANT_FILTER){
                    filterValue.removeAllItems();
                    
                    ArrayList<Integer> variants = library.getVariants();
                    
                    for(int variant : variants){
                        filterValue.addItem(Integer.toString(variant));
                    }
                }                
            }
        });
        
        JComponent[] inputs = new JComponent[]{
            new JLabel("Прізвище та ім'я:"), name,
            new JLabel("Група:"), group,
            new JLabel("Фільтр:"), filter,
            new JLabel("    Значення:"), filterValue};
        
        //JOptionPane.showInputDialog(null, inputs, "Початок тестування", JOptionPane.PLAIN_MESSAGE);
        JOptionPane.showMessageDialog(null, inputs, "Початок тестування", JOptionPane.PLAIN_MESSAGE);
        
        if("".equals(group.getText()) || "".equals(name.getText())){
            startTestInputDialog();
        }
        else{
            deliveryQuestion = filteredQuestion(filter.getSelectedIndex(), (String)filterValue.getSelectedItem());
            
            testingPanel1.setStatistic(studentStatistic);
            
            studentStatistic.set_questions(deliveryQuestion);
            studentStatistic.setName(name.getText());
            studentStatistic.setGroup(group.getText());
            studentStatistic.setTestName(library.get_test_name());
            studentStatistic.setFilter((String)filter.getSelectedItem()+ ": " + (String)filterValue.getSelectedItem());
        }
    }
    
    private void setFilteredValueQuestionNumber(JComboBox<String> filterValue){
        int libSize= library.get_questions_count();
                    
                    for(int i = 1; i < libSize + 1; i++){
                        filterValue.addItem(Integer.toString(i));
                    }
    }
    
    private ArrayList<Question> filteredQuestion(int filter, String selectedItem){
        ArrayList<Question> resultQuestionList;
                
        if(filter == THEME_FILTER){
            resultQuestionList = library.get_question_of_theme(selectedItem);
        }
        else if(filter == VARIANT_FILTER){
            resultQuestionList = library.get_question_of_variant(Integer.valueOf(selectedItem));
        }
        else{
            resultQuestionList = library.get_random_questions(Integer.valueOf(selectedItem));
        }
        return resultQuestionList;
    }
    
    private boolean loginTeacherDialog(){
        boolean result = false;
        
        JPasswordField password  = new JPasswordField();
        
        JComponent[] inputs = new JComponent[]{
            new JLabel("Пароль:"), password    };
        
        JOptionPane.showMessageDialog(null, inputs, "Авторизація", JOptionPane.PLAIN_MESSAGE);
       
        if(new String(password.getPassword()).equals(TEACHER_PASSW)){
            result = true;
        }
        return result;
    }
    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainWindowGraphicInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MainWindowGraphicInterface().setVisible(true);
//            }
//            
//            
//        });        
//        //loadFromFile();
//    }
//    
//    static private void loadFromFile(){
//        String path = "testsFileUTF.txt";
//        
//        Library libFromFile = new Library();
//        
//        ArrayList<String>   list = new ArrayList<>();
//        ArrayList<Question> q    = new ArrayList<>();
//        		
//        try {
//            BufferedReader reader = new BufferedReader(new FileReader(path));
//
//            String line;
//            try {
//                while ((line = reader.readLine()) != null) {
//                    list.add(line);
//                }
//            } catch (IOException e) {
//                    e.printStackTrace();
//            }
//            
//            try {
//                reader.close();
//            } catch (IOException ex) {
//                Logger.getLogger(MainWindowGraphicInterface.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        } catch (FileNotFoundException e1) {
//                e1.printStackTrace();
//        }
//
//        if(!list.isEmpty()){
//            for(int i = 0; i < list.size() - 13; i += 6){
//                Question que = new Question(list.get(i));
//                
//                String[] ans = new String[4];
//
//                for(int j = 1; j < 5; j++){
//                        ans[j-1] = list.get(i + j);
//                }
//                
//                que.add_answers(ans, new int[]{0});
//                que.swap_answers();
//
//                q.add(que);
//            }
//        }
//        
//        for(int i = 0; i < 3; i++){
//            q.get(i).set_theme("Бази даних");
//            q.get(i).set_cost(1.0f);
//        }
//        
//        for(int i = 3; i < 9; i++){
//            q.get(i).set_theme("Об'єкти бази даних");
//            q.get(i).set_cost(1.0f);
//        }
//        
//        for(int i = 9; i < 40; i++){
//            q.get(i).set_theme("Робота з базою даних");
//            q.get(i).set_cost(1.0f);
//        }
//        
//        for(int i = 40; i < 46; i++){
//            q.get(i).set_theme("Запити");
//            q.get(i).set_cost(1.0f);
//        }
//        
//        for(int i = 46; i < 50; i++){
//            q.get(i).set_theme("Звіти");
//            q.get(i).set_cost(1.0f);
//        }
//        for(int i = 50; i < 60; i++){
//            q.get(i).set_theme("СУБД");
//            q.get(i).set_cost(1.0f);
//        }
//        for(int i = 60; i < 81; i++){
//            q.get(i).set_theme("Загальна інформація");
//            q.get(i).set_cost(1.0f);
//        }
//        for(int i = 81; i < 88; i++){
//            q.get(i).set_theme("Типи баз даних");
//            q.get(i).set_cost(1.0f);
//        }
//        for(int i = 88; i < 102; i++){
//            q.get(i).set_theme("Використання СУБД");
//            q.get(i).set_cost(1.0f);
//        }
//        for(int i = 102; i < 128; i++){
//            q.get(i).set_theme("СУБД");
//            q.get(i).set_cost(1.0f);
//        }
//        for(int i = 128; i < 131; i++){
//            q.get(i).set_theme("Форми");
//            q.get(i).set_cost(1.0f);
//        }
//        for(int i = 131; i < 140; i++){
//            q.get(i).set_theme("Загальна інформація");
//            q.get(i).set_cost(1.0f);
//        }
//        for(int i = 140; i < 187; i++){
//            q.get(i).set_theme("SQL");
//            q.get(i).set_cost(1.0f);
//        }
//        for(int i = 187; i < q.size(); i++){
//            q.get(i).set_theme("Функції SQL");
//            q.get(i).set_cost(1.0f);
//        }
//        libFromFile.updateQuestions(q);
////        for(Question quest : q){
////            libFromFile.addQuestion(quest);
////            System.out.println(quest.get_text());
////        }
//        libFromFile.setRandomVariants();
//        q = libFromFile.getQuestions();
//        libFromFile.updateQuestions(q);
//        
//        libFromFile.set_test_name("Тест СУБД Access");
//        Library.save_library(libFromFile, "Тести_СУБД_Access(255).tlib");
//    }
    
    private void loadPassword(){
        if(!new File("users.stg").exists()){
            userSettings.setPassword(TEACHER_PASSW.toCharArray());
            userSettings.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            
            UserSettings.saveSettings(userSettings);
        }
        else{
            try {
                userSettings = UserSettings.loadSettings();
                
                TEACHER_PASSW = userSettings.getPassword();
                UIManager.setLookAndFeel(userSettings.getLookAndFeel());
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                Logger.getLogger(MainWindowGraphicInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    private Statistic    studentStatistic;
    private Library      library;
    private UserSettings userSettings;
    
    private ArrayList<Question> deliveryQuestion; 
    
    private boolean isTestingProcess = false;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog jDialog_StartTest;
    private application_window.EditorWindowGraphicInterface jFrame_Editor;
    private application_window.HelpWindowGraphicInterface jFrame_Help;
    private application_window.SettingWindowGraphicInterface jFrame_Settings;
    private javax.swing.JFrame jFrame_Statistic;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem_About;
    private javax.swing.JMenuItem jMenuItem_AddNewTests;
    private javax.swing.JMenuItem jMenuItem_EditTests;
    private javax.swing.JMenuItem jMenuItem_Exit;
    private javax.swing.JMenuItem jMenuItem_Finish;
    private javax.swing.JMenuItem jMenuItem_NewTest;
    private javax.swing.JMenuItem jMenuItem_OpenTest;
    private javax.swing.JMenu jMenu_Help;
    private javax.swing.JMenu jMenu_Menu;
    private javax.swing.JMenu jMenu_Settings;
    private javax.swing.JMenu jMenu_Teacher;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_Statistic;
    private javax.swing.JScrollPane jScrollPane_DetailStatistic;
    private javax.swing.JScrollPane jScrollPane_Statistic;
    private javax.swing.JPopupMenu.Separator jSeparator_Menu;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane_DetailStatistic;
    private application_window.TestingPanel testingPanel1;
    // End of variables declaration//GEN-END:variables

    private static String TEACHER_PASSW = "teacher";
    
    private final static int THEME_FILTER   = 1;
    private final static int VARIANT_FILTER = 2;
    private final static int OPEN_LIBRARY   = 3;
    private final static int OPEN_STATISTIC = 4;
}
